#include <math.h>
#include <stdio.h>
#include <stdlib.h>

void leitura(int d, int n, double **v_vs) {
  int i, j;
  double num;
  for (i = 0; i < n; i++) {
    for (j = 0; j < d; j++) {
      scanf("%le ", &num);
      v_vs[i][j] = num * 1000;
    }
  }
}

// preenche outro vetor com dados tratados
void dados_janela(int d, int n, double **v_vs, double **v_vsN) {
  int i, j, k, l;

  // cada ponto eh normalizado para o intervalo [1, -1]
  for (j = 0; j < d; j++) {
    double max = -INFINITY, min = +INFINITY;
    for (k = 0; k < n; k++) {
      if (v_vs[k][j] < min) {
        min = v_vs[k][j];
      }
    }
    for (l = 0; l < n; l++) {
      if (v_vs[l][j] > max) {
        max = v_vs[l][j];
      }
    }

    for (i = 0; i < n; i++) {
      v_vsN[i][j] = ((2 * ((v_vs[i][j] - min) / (max - min))) - 1);
    }
  }
}

// o vetor sera normalizado euclidiana
void dados_unitarios(int d, int n, double **v_vs, double **v_vsN2) {
  int i, j, k;
  double norma;

  for (i = 0; i < n; i++) {
    // primeiro calcaular        norma = sqrt(norma);emos a norma do vetor
    for (j = 0; j < d; j++) {
      norma += (v_vs[i][j] * v_vs[i][j]);
    }
    norma = sqrt(norma);
    // agora dividimos cada termo do i-esimo ponto pela norma
    for (k = 0; k < d; k++) {
      v_vsN2[i][k] = v_vs[i][k] / norma;
    }
  }
}

// calcula a media preenchendo um vetor com d elementos
void media(int d, int n, double **v_vs, double *v_m) {
  int i, j;
  double aux;
  for (j = 0; j < d; j++) {
    aux = 0;
    for (i = 0; i < n; i++) {
      aux += v_vs[i][j];
    }
    v_m[j] = aux / n;
  }
}

int impressao(int d, double *v_m, int a) {
  int i;
  if (a == 1) {
    printf("nenhum: ");
    for (i = 0; i < d; i++) {
      printf("%.3f ", v_m[i] / 1000);
    }
    return 1;
  } else if (a == 2)
    printf("janela: ");
  else if (a == 3)
    printf("normal: ");
  for (int i = 0; i < d; i++) {
    printf("%.3f ", v_m[i]);
  }
  return 1;
}

void liberar(int d, int n, double **v) {
  int i;
  for (i = 0; i < n; i++) {
    free(v[i]);
  }
  free(v);
}

int main() {
  int d, n, i;
  scanf("%d %d", &d, &n);
  double **v_vs, **v_vsN, **v_vsN2, *v_m;

  // iremos alocar espaÃ§o para o conjunto de pontos e para os conjuntos de
  // pontos normalizado
  v_vs = (double **)malloc(n * sizeof(double *));
  for (i = 0; i < n; i++) {
    v_vs[i] = (double *)malloc(d * sizeof(double));
  }
  if (v_vs == NULL) {
    exit(1);
  }
  v_vsN = (double **)malloc(n * sizeof(double *));
  for (i = 0; i < n; i++) {
    v_vsN[i] = (double *)malloc(d * sizeof(double));
  }
  if (v_vsN == NULL) {
    exit(1);
  }
  v_vsN2 = (double **)malloc(n * sizeof(double *));
  for (i = 0; i < n; i++) {
    v_vsN2[i] = (double *)malloc(d * sizeof(double));
  }
  if (v_vsN2 == NULL) {
    exit(1);
  }
  // criaremos tambem um vetor media
  v_m = (double *)malloc(d * sizeof(double));
  if (v_m == NULL) {
    exit(1);
  }
  // le o o cojunto de pontos e descobre o valor maximo e o valor minimo
  leitura(d, n, v_vs);

  // preenche os vetores com as devidas normmalizacoes
  dados_janela(d, n, v_vs, v_vsN);
  dados_unitarios(d, n, v_vs, v_vsN2);

  // escreve o vetor media com a devida normalizacao e o imprimi
  media(d, n, v_vs, v_m);
  impressao(d, v_m, 1);
  liberar(d, n, v_vs);
  printf("\n");
  media(d, n, v_vsN, v_m);
  impressao(d, v_m, 2);
  liberar(d, n, v_vsN);
  printf("\n");
  media(d, n, v_vsN2, v_m);
  impressao(d, v_m, 3);
  liberar(d, n, v_vsN2);
  printf("\n");
  free(v_m);

  return 0;
}
